name: Build images
# TODO probably going to be a call input. Either tag or PR name
run-name: Build images

on:
  pull_request:
    # https://docs.github.com/en/actions/reference/workflows-and-actions/events-that-trigger-workflows#pull_request
    # and https://docs.github.com/en/webhooks/webhook-events-and-payloads?actionType=synchronize#pull_request
    # can probably combine with a caller to filter on label following
    # https://stackoverflow.com/questions/62325286/run-github-actions-when-pull-requests-have-a-specific-label
    types: [opened, synchronize]
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

permissions: write-all # Necessary for the generate-build-provenance action with containers

jobs:
  build-push-images:
    environment: 'Docker Push'
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      # manual tag generation alternative, but without support for pr/branch tags
      #- name: Parse semver string
      #  id: semver_parser
      #  uses: booxmedialtd/ws-action-parse-semver@v1.4.7
      #  with:
      #    input_string: ${{ github.event.inputs.tag }} # TODO change to actual tag push?
      #    version_extractor_regex: 'v(.*)$'
      #- name: Add standard tags
      #  run: |
      #    (
      #      echo 'TAGS_STANDARD<<EOF'
      #      echo 'type=raw,value=${{ steps.semver_parser.outputs.fullversion }}'
      #      echo 'EOF'
      #    ) >> $GITHUB_ENV
      #- name: Add major.minor tag
      #  if: ${{ steps.semver_parser.outputs.prerelease == '' }}
      #  run: |
      #    (
      #      echo 'TAGS_SUPPLEMENTAL<<EOF'
      #      echo ""
      #      echo 'type=raw,value=${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}'
      #      echo 'EOF'
      #    ) >> $GITHUB_ENV
      - name: Setup golang
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
      - run: echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
      - run: echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Cache Docker layers
        uses: actions/cache@v4.2.3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Fill image meta
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/rainest/pcs # TODO needs to be subbed in from call somehow
          # TODO unclear if we get passthrough from the parent
          # https://docs.github.com/en/actions/reference/workflows-and-actions/events-that-trigger-workflows#workflow_call
          # suggests so, since the event payload is "Same as the caller workflow"
          # this is easier to use than manual tag generation via booxmedialtd/ws-action-parse-semver but doesn't support major/minor
          # doesn't look like goreleaser handles major/minor either from https://goreleaser.com/customization/dockers_v2/ but packages
          # in https://github.com/OpenCHAMI/cloud-init/pkgs/container/cloud-init suggest otherwise
          # TODO goreleaser is setting a bunch of labels that maybe need to be set with
          # https://docs.docker.com/build/ci/github-actions/manage-tags-labels/
          # unclear how much built-in labeling is there already
          tags: |
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr
      - name: Build binary
        id: docker_build_binary
        uses: docker/build-push-action@v6.18.0
        with:
          push: false
          file: Dockerfile.build
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          target: builder # TODO Dockerfile needs to match
          platforms: linux/amd64
          build-args: |
            TAG=${{ steps.meta.outputs.version }}
            COMMIT=${{ github.sha }}
            REPO_INFO=https://github.com/${{ github.repository }}.git
            GOPATH=${{ env.GOPATH}}
            GOCACHE=${{ env.GOCACHE}}
      - name: Auth to registry
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: Build and push image
        id: docker_build
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          file: Dockerfile.build
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          target: distroless # TODO needs update
          platforms: linux/amd64, linux/arm64
          build-args: |
            TAG=${{ steps.meta.outputs.version }}
            COMMIT=${{ github.sha }}
            REPO_INFO=https://github.com/${{ github.repository }}.git
            GOPATH=${{ env.GOPATH}}
            GOCACHE=${{ env.GOCACHE}}

  publish-release:
    runs-on: ubuntu-latest
    needs: build-push-images
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
    - name: Parse semver string
      id: semver_parser
      uses: booxmedialtd/ws-action-parse-semver@v1.4.7
      with:
        input_string: ${{ github.event.push.ref }}
        version_extractor_regex: 'refs/tags/v(.*)$'
    - uses: ncipollo/release-action@v1.18.0
      with:
        # by default this will use the tag push tag as the tag and name
        # if we want to trigger tagging from the workflow, "tag" and "commit"
        # need to be set to create a new one
        prerelease: ${{ steps.semver_parser.outputs.prerelease != '' }}
